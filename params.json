{
  "name": "Openfnuse",
  "tagline": "",
  "body": "# Functions\r\n\r\nAs highlighted in the previous section the general structure of creating custom return data uses the following code.\r\n```javascript\r\nfield(Object,function(state){return ...})\r\n```\r\n\r\nWe know that `field(\"Date__c\", dataValue(\"date\"))` takes the *date* field in **ODK** and sends it to the *Date__c* in **Salesforce**. An equivalent version of this using `function` is: \r\n```javascript\r\nfield(\"Date__c\", function(state){return dataValue(\"date\")(state)})\r\n```\r\n> NOTE: Within a `function` it is important to include `(state)` after `dataValue(...)`\r\n\r\n## Sample Uses of Functions\r\n\r\n### Replace characters\r\n```javascript\r\nfield(\"Date__c\",function(state){return dataValue(\"date\")(state).replace(/-/g,\"*\")})\r\n```\r\nThe following code replaces all occurrences of `-` within the *date* (**ODK**) with `*` and sends it to the *Date__c* in **Salesforce**\r\n> i.e \"2016-02-15\" (ODK) -> \"2016\\*02\\*15\" (Salesforce)\r\n\r\n### Combine text\r\n```javascript\r\nfield(\"subject__c\",function(state){return dataValue(\"date\")(state).replace(/-/g,\"*\")+\" from \"+ dataValue(\"name\")(state)})\r\n```\r\nThe following code does the same as the replace characters method above but also concatenates the *name* field from **ODK** with it and includes \" from \" between the two fields and stores this within *subject__c* in **Salesforce**.\r\n>i.e \"2016-02-15\" (ODK date) and \"Bob\" (ODK name) -> \"2016\\*02\\*15 from Bob\" (Salesforce subject__c)\r\n\r\n\r\n### Conditional Changes to Text (If Statements) \r\n\r\n```javascript\r\nfield(\"check__c\", function(state) { return ((dataValue(\"check\")(state)===\"yes\")?\"true\":\"false\")})\r\n```\r\nSuppose a `select_one` field called *check* was created in **ODK** with the options \"yes\" or \"no\". Instead of storing \"yes\" or \"no\" in **Salesforce** you wanted to store \"true\" or \"false\". The above code would store in **Salesforce** \"true\" if \"yes\" and \"false\" if \"no\".\r\n> \"yes\" (ODK) -> \"true\"  (Salesforce)\r\n\r\n> \"no\"  (ODK) -> \"false\" (Salesforce)\r\n\r\nThe general structure for these type of statements is:\r\n```javascript\r\nfunction(state) { return (<Condition>)?<Output if Condition is Met>:<Output if Condition is NOT Met>)\r\n```\r\n\r\n### Select_multiple (ODK) to Multi-picklist (Salesforce)\r\n\r\nThe following function changes the select_multiple filed in **ODK** from a list to a *string* (text) and joins them by `;` with spaces instead of `_`. This done as in **Salesforce** multi-picklists are stored as text which are seperated by `;`.\r\n```javascript\r\nfield(\"Object__c\",function(state) {\r\n                return Array.apply(\r\n                 null, dataValue(\"ODK_field\")(state)\r\n                ).join(';').replace(/_/g,\" \")\r\n            })\r\n```\r\n\r\n# Merge\r\n```javascript\r\neach(\r\n    merge(dataPath(\"data[*].list_of_letters[*]\"), fields(\r\n        field(\"parentId\", function(state) { return state.references[state.references.length-1].id}),\r\n        field(\"date\", dataValue(\"$.data[*].date\")),\r\n    )),\r\n    create(\"Object__c\", fields(\r\n        field(\"id\", dataValue(\"parentId\")),\r\n        field(\"Date__c\", dataValue(\"date\"))\r\n      \r\n    ))\r\n)\r\n```\r\n`merge` allows for all items from the `dataPath` have access to the same fields.\r\n\r\n```javascript\r\nfield(\"parentId\", function(state) { return state.references[state.references.length-1].id}),\r\n```\r\nIn the above example `parentId` is obtained from the first record ID made by **OpenFn**. Each of the items in *list_of_letters* will now have access to the same `parentId` and can use it in the same method as the **ODK method**.\r\n\r\n```javascript\r\nfield(\"date\", dataValue(\"$.data[*].date\")),\r\n```\r\nThis example uses `$` to use to specify the dataPath within the fields. i.e it takes *date* from `data[*]` and not `data[*].list_of_letters[*]` ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}