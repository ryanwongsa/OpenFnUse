{
  "name": "Openfnuse",
  "tagline": "",
  "body": "# 3. Example OpenFn Jobs\r\n\r\n## Simple Record\r\n\r\nThe job below is adds a record from ODK to Salesforce using only the ODK form data with no modifications.\r\n\r\n```javascript\r\n//for each form sent\r\neach(\r\n   // use the datapath data[*] (ODK form root data)\r\n    dataPath(\"data[*]\"),\r\n      // create an Activity__c Record in Salesforce\r\n        create(\"Activity__c\", fields(\r\n          // with the 'RecordTypeId' (Salesforce) record (ODK)\r\n            field(\"RecordTypeId\", dataValue(\"record\")),\r\n          // the 'name' (Salesforce) must contain 'Activities_Name' (ODK)\r\n            field(\"name\", dataValue(\"Activities_Name\")),\r\n          // the 'Date__c' (Salesforce) must contain 'Date' (ODK)\r\n            field(\"Date__c\",dataValue(\"Date\")),\r\n          // the 'Duration_of_the_Session_Hour_s__c' (Salesforce) must contain 'Duration' (ODK)\r\n            field(\"Duration_of_the_Session_Hour_s__c\",dataValue(\"Duration\")),\r\n          // the 'comments__c' (Salesforce) must contain 'Comments' (ODK)\r\n            field(\"comments__c\",dataValue(\"Comments\"))\r\n    ))\r\n)\r\n```\r\n\r\n## Multiple Records (E.g. Activity + Attendance)\r\n\r\nUsing the functions and methods from the previous Section, we can use  **OpenFn** to add multiple records into **Salesforce** such as an Activity with Attendance. The Attendance uses a *master lookup* on **Salesforce**.\r\n```javascript\r\neach(\r\n    dataPath(\"data[*]\"),\r\n        create(\"Activity__c\", fields(\r\n        //hard coded\r\n            field(\"RecordTypeID\", \"0123456789\"),\r\n        // combination of fields\r\n            field(\"name\", function(state) {return \"NAME \"+ dataValue(\"subject\")(state).toString().replace(\"_\",\" \") +\" \"+ dataValue(\"Grade__c\")(state).toString().replace(\"_\",\" \") +\" \"+ ((dataValue(\"School__c\")(state).toString()===\"A\")?\"School A\":\"School B\") + \" \" + dataValue(\"Date__c\")(state)}),\r\n        // date field (OKD) to date field (Salesforce)\r\n            field(\"Date__c\", dataValue(\"Date__c\")),\r\n        // decimal field (ODK) to number field (Salesforce)\r\n            field(\"Expected_Attendance__c\", dataValue(\"Expected_Attendance__c\")),\r\n        // text field (ODK) to text field (Salesforce)\r\n            field(\"School__c\", dataValue(\"School__c\")),\r\n        // sample replace function\r\n            field(\"subject__c\", function(state){return dataValue(\"subject\")(state).toString().replace(/_/g,\" \")}),\r\n        // select_one (ODK) to checkbox / text field (Salesforce)\r\n            field(\"Class_split__c\", dataValue(\"Class_split__c\")),\r\n        // select_multiple (ODK) to multipicklist (Salesforce)\r\n            field(\"Multipicklistobject__c\",function(state) {\r\n                return Array.apply(\r\n                 null, dataValue(\"select_multiple_object\")(state)\r\n                ).join(';').replace(/_/g,\" \")\r\n            }),\r\n          ))\r\n),\r\n// create new record Tutor Attendance Record\r\neach(\r\n  // use path Tutors_list__c (i.e repeat the create code for each tutor selected)\r\n    merge(dataPath(\"data[*].Tutors_list__c[*]\"), fields(\r\n      // use the ID for the first record created with OpenFn for each tutor\r\n        field(\"parentId\", function(state) { return state.references[state.references.length-1].id})\r\n    )),\r\n    create(\"Tutors_facilitators_Attendance__c\", fields(\r\n        field(\"Activity\", dataValue(\"parentId\")),\r\n     // (refer to Page 1), since tutor_list__c is within data[*] each character is treated as a 'file'.\r\n        field(\"Tutor_facilitator__c\", function(state) { return dataValue(\"0\")(state)+dataValue(\"1\")(state)+dataValue(\"2\")(state)+dataValue(\"3\")(state)+dataValue(\"4\")(state)+dataValue(\"5\")(state)+dataValue(\"6\")(state)+dataValue(\"7\")(state)+dataValue(\"8\")(state)+dataValue(\"9\")(state)+dataValue(\"10\")(state)+dataValue(\"11\")(state)+dataValue(\"12\")(state)+dataValue(\"13\")(state)+dataValue(\"14\")(state)})\r\n    ))\r\n),\r\n// create new record Student Attendance Record\r\neach(\r\n  // use path Student_list_A__c (i.e repeat the create code for each tutor selected)\r\n    merge(dataPath(\"data[*].Student_list_A__c[*]\"), fields(\r\n      // use the ID for the first record created with OpenFn for each student\r\n        field(\"parentId\", function(state) { return state.references[state.references.length-1].id})\r\n    )),\r\n    create(\"Attendance__c\", fields(\r\n        field(\"Activity\", dataValue(\"parentId\")),\r\n     // (refer to Page 1), since Student_list_A__c is within data[*] each character is treated as a 'file'.\r\n        field(\"student__c\", function(state) { return dataValue(\"0\")(state)+dataValue(\"1\")(state)+dataValue(\"2\")(state)+dataValue(\"3\")(state)+dataValue(\"4\")(state)+dataValue(\"5\")(state)+dataValue(\"6\")(state)+dataValue(\"7\")(state)+dataValue(\"8\")(state)+dataValue(\"9\")(state)+dataValue(\"10\")(state)+dataValue(\"11\")(state)+dataValue(\"12\")(state)+dataValue(\"13\")(state)+dataValue(\"14\")(state)})\r\n    ))\r\n)\r\n```\r\n\r\n## List in ODK to Multiple Records in Salesforce (E.g. Students getting their own reviews / records with same data)\r\n\r\nUsing the functions and methods from the previous Section, we can use  **OpenFn** to add multiple records into **Salesforce** from a list in ODK. The records will each have the same data except have the different list element such as a student. \r\n\r\n```javascript\r\n// repeats for each item in list mentioned in dataPath\r\neach(\r\n  // datapath is list_of_students[*]. Therefore if there are 5 students. The each will repeat 5 times (once of each student)\r\n    merge(dataPath(\"data[*].list_of_students[*]\"), fields(\r\n  // does not use the datapath above (data[*].list_of_students[*]) instead uses data[*] with the field subject\r\n      field(\"name\", dataValue(\"$.data[*].subject\")),\r\n  // does not use the datapath above (data[*].list_of_students[*]) instead uses data[*] with the field date\r\n      field(\"end\", dataValue(\"$.data[*].date\"))\r\n    )),\r\n    create(\"Case\", fields(\r\n     // hard coded\r\n        field(\"RecordTypeId\", \"0123456789\"),\r\n     // field name is received from above and not the ODK form\r\n        field(\"Subject\",dataValue(\"name\")),\r\n        field(\"Date_of_Original_Referral__c\", dataValue(\"end\")),\r\n     // (refer to Page 1), since list_of_students is within data[*] each character is treated as a 'file'.\r\n        field(\"Beneficiary_Name__c\", function(state) { return dataValue(\"0\")(state)+dataValue(\"1\")(state)+dataValue(\"2\")(state)+dataValue(\"3\")(state)+dataValue(\"4\")(state)+dataValue(\"5\")(state)+dataValue(\"6\")(state)+dataValue(\"7\")(state)+dataValue(\"8\")(state)+dataValue(\"9\")(state)+dataValue(\"10\")(state)+dataValue(\"11\")(state)+dataValue(\"12\")(state)+dataValue(\"13\")(state)+dataValue(\"14\")(state)}),\r\n    // hardcoded : \"A\" -> pick list choice (Salesforce)\r\n        field(\"Originated_Case__c\",\"A\"),\r\n    // text [status] (ODK) -> pick list [Status__c] (Salesforce)\r\n        field(\"Status__c\",dataValue(\"status\"))\r\n    ))\r\n)\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}